/*
 *  Copyright (c) 2014, Parse, LLC. All rights reserved.
 *
 *  You are hereby granted a non-exclusive, worldwide, royalty-free license to use,
 *  copy, modify, and distribute this software in source code or binary form for use
 *  in connection with the web services and APIs provided by Parse.
 *
 *  As with any software that integrates with the Parse platform, your use of
 *  this software is subject to the Parse Terms of Service
 *  [https://www.parse.com/about/terms]. This copyright notice shall be
 *  included in all copies or substantial portions of the software.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 *  FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 *  COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 *  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 *  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */
apply plugin: "com.android.library"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName "1.0"
        versionCode 1
    }
    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
        }
        debug {
            debuggable true
        }
        staging {
            debuggable true
        }
    }
}

dependencies {
    api rootProject.ext.appcompat
    api rootProject.ext.parse

    compileOnly rootProject.ext.parseFacebookUtils
    compileOnly rootProject.ext.parseTwitterUtils

    implementation project(path: ':common')
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'com.google.code.gson:gson:2.9.0'
}

//apply from: "https://raw.githubusercontent.com/Commit451/gradle-android-javadocs/1.1.0/gradle-android-javadocs.gradle"

dependencyCheck {
    failBuildOnCVSS = 0
    scanConfigurations = configurations.findAll {
//        println(it.name)
        !it.name.startsWithAny('androidTest', 'test', 'debug', 'staging')
                && !it.name.contains('AndroidTest')
                && !it.name.contains('Test')
                && !it.name.contains('Debug')
                && !it.name.contains('Staging')
//                && it.name.contains("DependenciesMetadata")
                && (
                it.name.startsWithAny("api", "implementation", "runtimeOnly") ||
                        it.name.contains("Api") ||
                        it.name.contains("Implementation") ||
                        it.name.contains("RuntimeOnly")
        )
    }.collect {
        it.name
    }
    println('!#! scanConfigurations : ' + scanConfigurations)
}